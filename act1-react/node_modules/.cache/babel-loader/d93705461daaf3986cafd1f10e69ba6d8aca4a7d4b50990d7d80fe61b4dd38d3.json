{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport const ArticulosTienda = () => {\n  _s();\n  const [articulos, setArticulos] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Realiza una solicitud al backend (puedes utilizar fetch o axios)\n        // const response = await fetch(process.env.REACT_APP_GW_URL);\n        // const data = await response.json();\n\n        // Simulación de datos para propósitos de ejemplo\n        const data = [{\n          id: '1',\n          name: 'Camisa',\n          valor: 2000,\n          image: 'url_camisa.jpg'\n        }, {\n          id: '2',\n          name: 'Pantalón',\n          valor: 2500,\n          image: 'url_pantalon.jpg'\n        }, {\n          id: '3',\n          name: 'Zapatos',\n          valor: 4000,\n          image: 'url_zapatos.jpg'\n        }];\n\n        // Actualiza el estado con los datos recibidos del backend\n        setArticulos(data);\n      } catch (error) {\n        console.error(\"Error al obtener datos:\", error);\n      }\n    };\n\n    // Llama a la función fetchData al montar el componente\n    fetchData();\n  }, []); // El array de dependencias vacío asegura que el efecto se ejecute solo una vez al montar el componente\n\n  // Retorna la lista de artículos\n  return articulos;\n};\n_s(ArticulosTienda, \"FTp1QjCyTHjkXZ4DKlTORNSqT3M=\");\n_c = ArticulosTienda;\nvar _c;\n$RefreshReg$(_c, \"ArticulosTienda\");","map":{"version":3,"names":["useEffect","useState","ArticulosTienda","_s","articulos","setArticulos","fetchData","data","id","name","valor","image","error","console","_c","$RefreshReg$"],"sources":["C:/Users/lemor/Desktop/MAESTRIA/APP_act1/act1-react/src/hooks/ArticulosTienda.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport const ArticulosTienda = () => {\r\n  const [articulos, setArticulos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Realiza una solicitud al backend (puedes utilizar fetch o axios)\r\n        // const response = await fetch(process.env.REACT_APP_GW_URL);\r\n        // const data = await response.json();\r\n\r\n        // Simulación de datos para propósitos de ejemplo\r\n        const data = [\r\n          { id: '1', name: 'Camisa', valor: 2000, image: 'url_camisa.jpg' },\r\n          { id: '2', name: 'Pantalón', valor: 2500, image: 'url_pantalon.jpg' },\r\n          { id: '3', name: 'Zapatos', valor: 4000, image: 'url_zapatos.jpg' },\r\n        ];\r\n\r\n        // Actualiza el estado con los datos recibidos del backend\r\n        setArticulos(data);\r\n      } catch (error) {\r\n        console.error(\"Error al obtener datos:\", error);\r\n      }\r\n    };\r\n\r\n    // Llama a la función fetchData al montar el componente\r\n    fetchData();\r\n  }, []); // El array de dependencias vacío asegura que el efecto se ejecute solo una vez al montar el componente\r\n\r\n  // Retorna la lista de artículos\r\n  return articulos;\r\n};\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMM,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA;QACA;;QAEA;QACA,MAAMC,IAAI,GAAG,CACX;UAAEC,EAAE,EAAE,GAAG;UAAEC,IAAI,EAAE,QAAQ;UAAEC,KAAK,EAAE,IAAI;UAAEC,KAAK,EAAE;QAAiB,CAAC,EACjE;UAAEH,EAAE,EAAE,GAAG;UAAEC,IAAI,EAAE,UAAU;UAAEC,KAAK,EAAE,IAAI;UAAEC,KAAK,EAAE;QAAmB,CAAC,EACrE;UAAEH,EAAE,EAAE,GAAG;UAAEC,IAAI,EAAE,SAAS;UAAEC,KAAK,EAAE,IAAI;UAAEC,KAAK,EAAE;QAAkB,CAAC,CACpE;;QAED;QACAN,YAAY,CAACE,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;;IAED;IACAN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,OAAOF,SAAS;AAClB,CAAC;AAACD,EAAA,CA9BWD,eAAe;AAAAY,EAAA,GAAfZ,eAAe;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}