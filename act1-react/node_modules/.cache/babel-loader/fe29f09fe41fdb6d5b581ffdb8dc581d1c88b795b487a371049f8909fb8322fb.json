{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport const ArticulosTienda = () => {\n  _s();\n  const [articulos, setArticulos] = useState([]);\n  const items = ['sistema', 'c', 'automatización', 'medicina', 'cultura'];\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Crea un array de promesas para realizar búsquedas simultáneas\n        const searchPromises = items.map(async item => {\n          const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${item}`);\n          const data = await response.json();\n\n          // Extrae la información relevante de los libros\n          return data.items.map(book => {\n            var _book$saleInfo$listPr, _book$volumeInfo$imag;\n            return {\n              id: book.id,\n              name: book.volumeInfo.title,\n              precio: ((_book$saleInfo$listPr = book.saleInfo.listPrice) === null || _book$saleInfo$listPr === void 0 ? void 0 : _book$saleInfo$listPr.amount) || 0,\n              image: ((_book$volumeInfo$imag = book.volumeInfo.imageLinks) === null || _book$volumeInfo$imag === void 0 ? void 0 : _book$volumeInfo$imag.thumbnail) || \"URL_POR_DEFECTO\"\n            };\n          });\n        });\n\n        // Espera a que todas las solicitudes se completen\n        const resultados = await Promise.all(searchPromises);\n\n        // Combina los resultados en un solo array de libros\n        const libros = resultados.flat();\n        setArticulos(libros);\n      } catch (error) {\n        console.error(\"Error al obtener datos:\", error);\n      }\n    };\n    fetchData();\n  }, []); // No hay dependencias, se ejecuta solo una vez al montar el componente\n\n  return articulos;\n};\n_s(ArticulosTienda, \"FTp1QjCyTHjkXZ4DKlTORNSqT3M=\");\n_c = ArticulosTienda;\nvar _c;\n$RefreshReg$(_c, \"ArticulosTienda\");","map":{"version":3,"names":["useEffect","useState","ArticulosTienda","_s","articulos","setArticulos","items","fetchData","searchPromises","map","item","response","fetch","data","json","book","_book$saleInfo$listPr","_book$volumeInfo$imag","id","name","volumeInfo","title","precio","saleInfo","listPrice","amount","image","imageLinks","thumbnail","resultados","Promise","all","libros","flat","error","console","_c","$RefreshReg$"],"sources":["C:/Users/lemor/Desktop/MAESTRIA/APP_act1/act1-react/src/hooks/ArticulosTienda.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport const ArticulosTienda = () => {\r\n  const [articulos, setArticulos] = useState([]);\r\n  const items = ['sistema', 'c', 'automatización', 'medicina', 'cultura'];\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Crea un array de promesas para realizar búsquedas simultáneas\r\n        const searchPromises = items.map(async (item) => {\r\n          const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${item}`);\r\n          const data = await response.json();\r\n          \r\n          // Extrae la información relevante de los libros\r\n          return data.items.map((book) => ({\r\n            id: book.id,\r\n            name: book.volumeInfo.title,\r\n            precio: book.saleInfo.listPrice?.amount || 0,\r\n            image: book.volumeInfo.imageLinks?.thumbnail || \"URL_POR_DEFECTO\",\r\n          }));\r\n        });\r\n\r\n        // Espera a que todas las solicitudes se completen\r\n        const resultados = await Promise.all(searchPromises);\r\n\r\n        // Combina los resultados en un solo array de libros\r\n        const libros = resultados.flat();\r\n\r\n        setArticulos(libros);\r\n      } catch (error) {\r\n        console.error(\"Error al obtener datos:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []); // No hay dependencias, se ejecuta solo una vez al montar el componente\r\n\r\n  return articulos;\r\n};\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMK,KAAK,GAAG,CAAC,SAAS,EAAE,GAAG,EAAE,gBAAgB,EAAE,UAAU,EAAE,SAAS,CAAC;EAEvEN,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,cAAc,GAAGF,KAAK,CAACG,GAAG,CAAC,MAAOC,IAAI,IAAK;UAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iDAAgDF,IAAK,EAAC,CAAC;UACrF,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;UAElC;UACA,OAAOD,IAAI,CAACP,KAAK,CAACG,GAAG,CAAEM,IAAI;YAAA,IAAAC,qBAAA,EAAAC,qBAAA;YAAA,OAAM;cAC/BC,EAAE,EAAEH,IAAI,CAACG,EAAE;cACXC,IAAI,EAAEJ,IAAI,CAACK,UAAU,CAACC,KAAK;cAC3BC,MAAM,EAAE,EAAAN,qBAAA,GAAAD,IAAI,CAACQ,QAAQ,CAACC,SAAS,cAAAR,qBAAA,uBAAvBA,qBAAA,CAAyBS,MAAM,KAAI,CAAC;cAC5CC,KAAK,EAAE,EAAAT,qBAAA,GAAAF,IAAI,CAACK,UAAU,CAACO,UAAU,cAAAV,qBAAA,uBAA1BA,qBAAA,CAA4BW,SAAS,KAAI;YAClD,CAAC;UAAA,CAAC,CAAC;QACL,CAAC,CAAC;;QAEF;QACA,MAAMC,UAAU,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACvB,cAAc,CAAC;;QAEpD;QACA,MAAMwB,MAAM,GAAGH,UAAU,CAACI,IAAI,CAAC,CAAC;QAEhC5B,YAAY,CAAC2B,MAAM,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAED3B,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,OAAOH,SAAS;AAClB,CAAC;AAACD,EAAA,CArCWD,eAAe;AAAAkC,EAAA,GAAflC,eAAe;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}