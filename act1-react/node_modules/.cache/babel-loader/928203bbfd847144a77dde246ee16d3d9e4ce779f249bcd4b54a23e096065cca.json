{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lemor\\\\Desktop\\\\MAESTRIA\\\\APP_act1\\\\act1-react\\\\src\\\\components\\\\ProductsGridView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ProductCardView } from '../components/ProductsGridView';\nimport { products } from '../data/products';\nimport { useNavigate } from 'react-router-dom';\n//import '../Style/ProductsGridView.css'; // Ajusta la ruta según tu estructura de archivos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductsGridView = () => {\n  _s();\n  const navigate = useNavigate();\n  const productsPerPage = 6;\n  const [currentGroup, setCurrentGroup] = useState(1);\n  const startProductIndex = (currentGroup - 1) * productsPerPage;\n  const endProductIndex = startProductIndex + productsPerPage;\n  const currentProducts = products.slice(startProductIndex, endProductIndex);\n  const totalPages = Math.ceil(products.length / productsPerPage);\n  const handleAddProduct = product => {\n    console.log(product);\n    navigate('/cart');\n    // Agrega lógica adicional si es necesario\n  };\n  const nextGroup = () => {\n    setCurrentGroup(prevGroup => Math.min(prevGroup + 1, totalPages));\n  };\n  const prevGroup = () => {\n    setCurrentGroup(prevGroup => Math.max(prevGroup - 1, 1));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-grid\",\n      children: currentProducts.map(product => /*#__PURE__*/_jsxDEV(ProductCardView, {\n        id: product.id,\n        name: product.name,\n        description: product.description,\n        price: product.price,\n        image: product.image,\n        handler: handleAddProduct\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [currentGroup > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: prevGroup,\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), currentGroup < totalPages && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: nextGroup,\n        children: \"Siguiente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductsGridView, \"DK2uBHwgdnPhvD2HSsDgosZxFMQ=\", false, function () {\n  return [useNavigate];\n});\n_c = ProductsGridView;\nexport default ProductsGridView;\nvar _c;\n$RefreshReg$(_c, \"ProductsGridView\");","map":{"version":3,"names":["React","useState","ProductCardView","products","useNavigate","jsxDEV","_jsxDEV","ProductsGridView","_s","navigate","productsPerPage","currentGroup","setCurrentGroup","startProductIndex","endProductIndex","currentProducts","slice","totalPages","Math","ceil","length","handleAddProduct","product","console","log","nextGroup","prevGroup","min","max","children","className","map","id","name","description","price","image","handler","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lemor/Desktop/MAESTRIA/APP_act1/act1-react/src/components/ProductsGridView.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ProductCardView } from '../components/ProductsGridView';\r\nimport { products } from '../data/products';\r\nimport { useNavigate } from 'react-router-dom';\r\n//import '../Style/ProductsGridView.css'; // Ajusta la ruta según tu estructura de archivos\r\n\r\nconst ProductsGridView = () => {\r\n  const navigate = useNavigate();\r\n  const productsPerPage = 6;\r\n  const [currentGroup, setCurrentGroup] = useState(1);\r\n\r\n  const startProductIndex = (currentGroup - 1) * productsPerPage;\r\n  const endProductIndex = startProductIndex + productsPerPage;\r\n  const currentProducts = products.slice(startProductIndex, endProductIndex);\r\n\r\n  const totalPages = Math.ceil(products.length / productsPerPage);\r\n\r\n  const handleAddProduct = (product) => {\r\n    console.log(product);\r\n    navigate('/cart');\r\n    // Agrega lógica adicional si es necesario\r\n  };\r\n\r\n  const nextGroup = () => {\r\n    setCurrentGroup((prevGroup) => Math.min(prevGroup + 1, totalPages));\r\n  };\r\n\r\n  const prevGroup = () => {\r\n    setCurrentGroup((prevGroup) => Math.max(prevGroup - 1, 1));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"product-grid\">\r\n        {currentProducts.map((product) => (\r\n          <ProductCardView\r\n            key={product.id}\r\n            id={product.id}\r\n            name={product.name}\r\n            description={product.description}\r\n            price={product.price}\r\n            image={product.image}\r\n            handler={handleAddProduct}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"pagination\">\r\n        {currentGroup > 1 && (\r\n          <button className=\"btn btn-secondary\" onClick={prevGroup}>\r\n            Anterior\r\n          </button>\r\n        )}\r\n\r\n        {currentGroup < totalPages && (\r\n          <button className=\"btn btn-secondary\" onClick={nextGroup}>\r\n            Siguiente\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductsGridView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}