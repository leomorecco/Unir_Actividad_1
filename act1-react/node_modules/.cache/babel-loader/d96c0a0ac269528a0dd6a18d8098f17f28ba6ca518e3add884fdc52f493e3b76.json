{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lemor\\\\Desktop\\\\MAESTRIA\\\\APP_act1\\\\act1-react\\\\src\\\\components\\\\ProductCardView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ProductCardView } from './ProductCardView';\nimport { products } from './ruta-al-archivo-que-contiene-products';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductsGridView = () => {\n  _s();\n  const navigate = useNavigate();\n  const productsPerPage = 6;\n  const [currentPage, setCurrentPage] = useState(1);\n  const startIndex = (currentPage - 1) * productsPerPage;\n  const endIndex = startIndex + productsPerPage;\n  const currentProducts = products.slice(startIndex, endIndex);\n  const handleAddProduct = product => {\n    console.log(product);\n    // Puedes realizar cualquier acción adicional al agregar un producto al carrito\n    navigate('/cart');\n  };\n  const totalPages = Math.ceil(products.length / productsPerPage);\n  const nextPage = () => {\n    setCurrentPage(prevPage => Math.min(prevPage + 1, totalPages));\n  };\n  const prevPage = () => {\n    setCurrentPage(prevPage => Math.max(prevPage - 1, 1));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [[...Array(Math.ceil(products.length / productsPerPage))].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-row\",\n      children: products.slice(index * productsPerPage, (index + 1) * productsPerPage).map(product => /*#__PURE__*/_jsxDEV(ProductCardView, {\n        id: product.id,\n        name: product.name,\n        description: product.description,\n        price: product.price,\n        image: product.image,\n        handler: handleAddProduct\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentPage > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: prevPage,\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), currentPage < totalPages && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: nextPage,\n        children: \"Siguiente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductsGridView, \"Qb1TdfgC3GPK8eOTlcjNyVYADC0=\", false, function () {\n  return [useNavigate];\n});\n_c = ProductsGridView;\nexport default ProductsGridView;\nvar _c;\n$RefreshReg$(_c, \"ProductsGridView\");","map":{"version":3,"names":["React","useState","ProductCardView","products","useNavigate","jsxDEV","_jsxDEV","ProductsGridView","_s","navigate","productsPerPage","currentPage","setCurrentPage","startIndex","endIndex","currentProducts","slice","handleAddProduct","product","console","log","totalPages","Math","ceil","length","nextPage","prevPage","min","max","children","Array","map","_","index","className","id","name","description","price","image","handler","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lemor/Desktop/MAESTRIA/APP_act1/act1-react/src/components/ProductCardView.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ProductCardView } from './ProductCardView';\nimport { products } from './ruta-al-archivo-que-contiene-products';\nimport { useNavigate } from 'react-router-dom';\n\nconst ProductsGridView = () => {\n  const navigate = useNavigate();\n  const productsPerPage = 6;\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const startIndex = (currentPage - 1) * productsPerPage;\n  const endIndex = startIndex + productsPerPage;\n  const currentProducts = products.slice(startIndex, endIndex);\n\n  const handleAddProduct = (product) => {\n    console.log(product);\n    // Puedes realizar cualquier acción adicional al agregar un producto al carrito\n    navigate('/cart');\n  };\n\n  const totalPages = Math.ceil(products.length / productsPerPage);\n\n  const nextPage = () => {\n    setCurrentPage((prevPage) => Math.min(prevPage + 1, totalPages));\n  };\n\n  const prevPage = () => {\n    setCurrentPage((prevPage) => Math.max(prevPage - 1, 1));\n  };\n\n  return (\n    <div>\n      {[...Array(Math.ceil(products.length / productsPerPage))].map((_, index) => (\n        <div key={index} className=\"product-row\">\n          {products.slice(index * productsPerPage, (index + 1) * productsPerPage).map((product) => (\n            <ProductCardView\n              key={product.id}\n              id={product.id}\n              name={product.name}\n              description={product.description}\n              price={product.price}\n              image={product.image}\n              handler={handleAddProduct}\n            />\n          ))}\n        </div>\n      ))}\n\n      <div>\n        {currentPage > 1 && (\n          <button className=\"btn btn-secondary\" onClick={prevPage}>\n            Anterior\n          </button>\n        )}\n\n        {currentPage < totalPages && (\n          <button className=\"btn btn-secondary\" onClick={nextPage}>\n            Siguiente\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProductsGridView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}